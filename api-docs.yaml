openapi: 3.0.0
info:
  title: Money Management API
  description: API for managing personal finances, budgets, and savings goals
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://api.moneymanager.com/api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum: [income, expense]
        icon:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        is_system:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Budget:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        amount:
          type: number
          format: float
        period_type:
          type: string
          enum: [monthly, weekly]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
        spent_amount:
          type: number
          format: float
        remaining_amount:
          type: number
          format: float

    Transaction:
      type: object
      properties:
        id:
          type: integer
        category:
          $ref: '#/components/schemas/Category'
        amount:
          type: number
          format: float
        type:
          type: string
          enum: [income, expense]
        description:
          type: string
        transaction_date:
          type: string
          format: date
        is_recurring:
          type: boolean
        recurring_frequency:
          type: string
          enum: [daily, weekly, monthly, yearly]
          nullable: true

paths:
  # Auth Endpoints
  /auth/register:
    post:
      tags: [Authentication]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
      responses:
        201:
          description: User registered successfully

  /auth/login:
    post:
      tags: [Authentication]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful

  /auth/logout:
    post:
      tags: [Authentication]
      summary: Logout user
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logout successful

  # Transaction Endpoints
  /transactions:
    get:
      tags: [Transactions]
      summary: List all transactions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: category_id
          schema:
            type: integer
        - in: query
          name: type
          schema:
            type: string
            enum: [income, expense]
        - in: query
          name: date_from
          schema:
            type: string
            format: date
        - in: query
          name: date_to
          schema:
            type: string
            format: date
      responses:
        200:
          description: List of transactions

    post:
      tags: [Transactions]
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                amount:
                  type: number
                  format: float
                type:
                  type: string
                  enum: [income, expense]
                description:
                  type: string
                transaction_date:
                  type: string
                  format: date
                is_recurring:
                  type: boolean
                recurring_frequency:
                  type: string
                  enum: [daily, weekly, monthly, yearly]
      responses:
        201:
          description: Transaction created successfully

  /transactions/summary:
    get:
      tags: [Transactions]
      summary: Get transaction summary
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: month
          schema:
            type: integer
        - in: query
          name: year
          schema:
            type: integer
      responses:
        200:
          description: Transaction summary

  # Savings Goals Endpoints
  /savings-goals:
    get:
      tags: [Savings Goals]
      summary: List all savings goals
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of savings goals

    post:
      tags: [Savings Goals]
      summary: Create a new savings goal
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                target_amount:
                  type: number
                initial_amount:
                  type: number
                target_date:
                  type: string
                  format: date
      responses:
        201:
          description: Savings goal created successfully

  /savings-goals/{id}/contribute:
    post:
      tags: [Savings Goals]
      summary: Contribute to a savings goal
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        200:
          description: Contribution successful

  # Notification Endpoints
  /notifications:
    get:
      tags: [Notifications]
      summary: List all notifications
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
      responses:
        200:
          description: List of notifications

  /notifications/mark-as-read:
    post:
      tags: [Notifications]
      summary: Mark notifications as read
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Optional notification ID. If not provided, marks all as read.
      responses:
        200:
          description: Notifications marked as read

  /notifications/settings:
    get:
      tags: [Notifications]
      summary: Get notification settings
      security:
        - bearerAuth: []
      responses:
        200:
          description: User's notification settings

    put:
      tags: [Notifications]
      summary: Update notification settings
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                budget_exceeded_email:
                  type: boolean
                budget_exceeded_database:
                  type: boolean
                savings_milestone_email:
                  type: boolean
                savings_milestone_database:
                  type: boolean
                savings_milestone_percentage:
                  type: integer
                  minimum: 1
                  maximum: 100
                recurring_transaction_reminder:
                  type: boolean
      responses:
        200:
          description: Settings updated successfully

  # ... continue with more endpoints ... 